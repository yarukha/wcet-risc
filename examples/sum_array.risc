testFunction: # @testFunction
  addi sp, sp, -32
  sw ra, 28(sp) # 4-byte Folded Spill
  sw s0, 24(sp) # 4-byte Folded Spill
  addi s0, sp, 32
  sw a0, -12(s0)
  sw a1, -16(s0)
  mv a0, zero
  sw a0, -20(s0)
  sw a0, -24(s0)
  j .LBB0_1
.LBB0_1: # =>This Inner Loop Header: Depth=1
  lw a0, -24(s0)
  lw a1, -16(s0)
  bge a0, a1, .LBB0_4
  j .LBB0_2
.LBB0_2: # in Loop: Header=BB0_1 Depth=1
  lw a0, -12(s0)
  lw a1, -24(s0)
  slli a1, a1, 2
  add a0, a0, a1
  lw a1, 0(a0)
  lw a0, -20(s0)
  add a0, a0, a1
  sw a0, -20(s0)
  j .LBB0_3
.LBB0_3: # in Loop: Header=BB0_1 Depth=1
  lw a0, -24(s0)
  addi a0, a0, 1
  sw a0, -24(s0)
  j .LBB0_1
.LBB0_4:
  lw a0, -20(s0)
  lw s0, 24(sp) # 4-byte Folded Reload
  lw ra, 28(sp) # 4-byte Folded Reload
  addi sp, sp, 32
  ret
main: # @main
  addi sp, sp, -32
  sw ra, 28(sp) # 4-byte Folded Spill
  sw s0, 24(sp) # 4-byte Folded Spill
  addi s0, sp, 32
  mv a0, zero
  sw a0, -12(s0)
  lui a0, %hi(.L__const.main.a)
  addi a1, a0, %lo(.L__const.main.a)
  lw a2, 16(a1)
  sw a2, -16(s0)
  lw a2, 12(a1)
  sw a2, -20(s0)
  lw a2, 8(a1)
  sw a2, -24(s0)
  lw a1, 4(a1)
  sw a1, -28(s0)
  lw a0, %lo(.L__const.main.a)(a0)
  sw a0, -32(s0)
  addi a0, s0, -32
  addi a1, zero, 5
  call testFunction
  lw s0, 24(sp) # 4-byte Folded Reload
  lw ra, 28(sp) # 4-byte Folded Reload
  addi sp, sp, 32
  ret
.L__const.main.a:
  .word 5 # 0x5
  .word 1 # 0x1
  .word 2 # 0x2
  .word 4 # 0x4
  .word 9 # 0x9